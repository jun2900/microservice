version: '3'

services:

  caddy:
    image: jun2900/micro-caddy:1.0.1
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  broker-service:
    image: jun2900/broker-service:1.0.2
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: jun2900/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: jun2900/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: jun2900/logger-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  front-end:
    image: jun2900/frontend-service:1.0.3
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"

  mail-service:
    image: jun2900/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: "localhost"
      MAIL_HOST: "mailhog"
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: "none"
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: "john.smith@example.com"

  rabbitmq:
    image: 'rabbitmq:3.13.2-alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '8025:8025'
    deploy:
      mode: global

  mongo:
    image: 'mongo'
    ports:
      - '27017:27017'
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo:/data/db
  
  postgres:
      image: 'postgres:latest'
      ports:
        - "5432:5432"
      deploy:
        mode: replicated
        replicas: 1
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: password
        POSTGRES_DB: users
      volumes:
        - postgres:/var/lib/postgresql/data/
        
volumes:
  mongo:
  postgres:
  caddy_data:
    external: true
  caddy_config:
